@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Monitoramento de Temperatura</h1>
<link rel="stylesheet" href="~/css/site.css" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container">
    <div class="grafico">
        <h3>Gráfico de Temperatura</h3>
        <canvas id="graficoTemperatura"></canvas>
    </div>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        text-align: center;
        padding: 20px;
    }

    
    .grafico canvas {
        max-height: 400px; /* Limita a altura do gráfico */
    }


    .container {
        width: 90%;
        max-width: 800px;
        margin: auto;
    }

    .grafico {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
    }
</style>


<script>
    let intervaloAtualizacaoSegundos = 10;
    const maxPontos = 10;  // Limite máximo de dados no gráfico

    const apiUrl = "/api/ClienteFiware?url=" +
                   encodeURIComponent("http://18.206.173.173:8666/STH/v1/contextEntities/type/DataLogger/id/urn:ngsi-ld:DataLogger:001/attributes/temperature?lastN=10");

    let ctx = document.getElementById('graficoTemperatura').getContext('2d');
    let graficoTemperatura = new Chart(ctx, {
        type: 'line',
        data: { labels: [], datasets: [{ label: "Temperatura (°C)", data: [], borderColor: "red", backgroundColor: "rgba(255, 99, 132, 0.2)", fill: true }] },
        options: {
            responsive: true,
            maintainAspectRatio: false, // Evita crescimento infinito
            scales: {
                x: { title: { display: true, text: "Tempo" } },
                y: { title: { display: true, text: "Temperatura (°C)" }, suggestedMin: 10, suggestedMax: 50 }
            }
        }
    });

    function obterDadosEAtualizar() {
        $.getJSON(apiUrl, function(response) {
            console.log("Dados recebidos:", response);

            if (!response || !response.dados || !Array.isArray(response.dados)) {
                console.error("Formato de dados inválido.");
                return;
            }

            let timestamps = response.dados.map(item => new Date(item.timestamp).toLocaleTimeString());
            let temperaturas = response.dados.map(item => parseFloat(item.valor));

            if (timestamps.length === 0 || temperaturas.length === 0) {
                console.warn("Nenhum dado válido para exibir.");
                return;
            }

            // Se atingiu o limite máximo, remove os primeiros elementos
            while (graficoTemperatura.data.labels.length >= maxPontos) {
                graficoTemperatura.data.labels.shift();
                graficoTemperatura.data.datasets[0].data.shift();
            }

            graficoTemperatura.data.labels.push(timestamps[timestamps.length - 1]);
            graficoTemperatura.data.datasets[0].data.push(temperaturas[temperaturas.length - 1]);

            graficoTemperatura.update();
        }).fail(function(error) {
            console.error("Erro ao buscar dados:", error);
        });
    }

    obterDadosEAtualizar();
    setInterval(obterDadosEAtualizar, intervaloAtualizacaoSegundos * 1000);
</script>